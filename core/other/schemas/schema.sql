-- customers: UUID PK generated by Hibernate (no DB default)
create table customers (
    customer_id UUID PRIMARY KEY,
    phone_number varchar(20)  NOT NULL UNIQUE,
    email varchar(255)  NOT NULL UNIQUE,
    username varchar(50)  NOT NULL UNIQUE, 
    password_hash varchar(255)  NOT NULL,
    name varchar(100) ,
    surname varchar(100) ,
    created_at timestamptz NOT NULL DEFAULT NOW(),
    is_subscribed boolean NOT NULL DEFAULT FALSE
);

-- customers_address: BIGINT PK generated by Hibernate (no DB default)
create table customers_address (
    addr_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id UUID NOT NULL REFERENCES customers(customer_id) ON DELETE CASCADE,
    country varchar(150) NOT NULL,
    street varchar(100) NOT NULL,
    city varchar(75) NOT NULL,
    postal_code varchar(50) NOT NULL,
    is_default boolean NOT NULL DEFAULT TRUE
);

-- Force one default per customer
CREATE UNIQUE INDEX uq_default_addr_per_customer
    ON customers_address(customer_id)
    WHERE is_default = TRUE;


-- customer_payment_methods: UUID PK generated by Hibernate (no DB default)
create table customer_payment_methods(
    customer_payment_id UUID PRIMARY KEY,
    customer_id UUID NOT NULL REFERENCES customers(customer_id) ON DELETE CASCADE,
    provider varchar(50) NOT NULL,
    provider_payment_token TEXT NOT NULL,
    brand varchar(25) NOT NULL,
    last_4 char(4) NOT NULL,
    year_exp SMALLINT NOT NULL,
    month_exp SMALLINT NOT NULL CHECK (month_exp BETWEEN 1 AND 12),
    is_default boolean NOT NULL DEFAULT TRUE
);

-- Force one default per customer
CREATE UNIQUE INDEX uq_default_payment_per_customer
    ON customer_payment_methods(customer_id)
    WHERE is_default = TRUE;

create table cart(
    cart_id UUID PRIMARY KEY,
    customer_id UUID NOT NULL REFERENCES customers(customer_id) ON DELETE CASCADE,
    created_at timestamptz NOT NULL DEFAULT NOW(),
    updated_at timestamptz NOT NULL DEFAULT NOW()
);

create table categories(
    category_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_name varchar(100) NOT NULL UNIQUE,
    category_description varchar(255) NOT NULL
);

create table products(
    product_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_name varchar(200) NOT NULL,
    product_description varchar(255) NOT NULL,
    product_details JSONB NOT NULL,
    product_available_stock INT NOT NULL,
    product_price DECIMAL(14,2) NOT NULL,
    created_at timestamptz NOT NULL DEFAULT NOW(),
    updated_at timestamptz NOT NULL DEFAULT NOW(),
    is_active BOOLEAN NOT NULL DEFAULT TRUE
);

create table product_category(
    product_category_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id BIGINT REFERENCES products(product_id) ON DELETE CASCADE,
    category_id BIGINT REFERENCES categories(category_id) ON DELETE CASCADE
);

create table cart_item(
    cart_item_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cart_id UUID REFERENCES cart(cart_id) ON DELETE CASCADE,
    product_id BIGINT REFERENCES products(product_id) ON DELETE CASCADE,
    product_name varchar(200) NOT NULL,
    quantity INT NOT NULL DEFAULT 1,
    price_at DECIMAL(14,2) NOT NULL,
    added_at timestamptz NOT NULL DEFAULT NOW()
);

create table orders(
    order_id UUID NOT NULL PRIMARY KEY,
    customer_id UUID NOT NULL REFERENCES customers(customer_id) ON DELETE CASCADE,
    total_outstanding DECIMAL(14,2) NOT NULL CHECK ( total_outstanding > 0),
    address_to_send JSONB NOT NULL,
    order_created_at timestamptz NOT NULL DEFAULT NOW(),
    order_completed_at timestamptz
);

create table order_item(
    order_item_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id UUID NOT NULL REFERENCES orders(order_id) ON DELETE CASCADE,
    product_id BIGINT NOT NULL REFERENCES products(product_id) ON DELETE CASCADE,
    product_name VARCHAR(200) NOT NULL,
    quantity INT NOT NULL DEFAULT 1,
    price_at DECIMAL(14,2) NOT NULL,
    snap_shot_at timestamptz NOT NULL DEFAULT NOW()
);

create table transactions(
    transaction_id UUID PRIMARY KEY,
    order_id UUID NOT NULL REFERENCES orders(order_id) ON DELETE CASCADE,
    customer_id_snapshot VARCHAR(36) NOT NULL,
    CONSTRAINT chk_transactions_customer_uuid
    CHECK (customer_id_snapshot ~* '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'),
    payment_method JSONB NOT NULL,
    total_outstanding DECIMAL(14,2) NOT NULL CHECK(total_outstanding >= 0),
    submitted_at timestamptz NOT NULL DEFAULT NOW(),
    completed_at timestamptz
);